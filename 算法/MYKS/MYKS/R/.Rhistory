}
for(j in 1:row)
{
r<-New_Distance_of_Categorical(data[j,],data[dist[1],])%*%da[j,1]
if(r>xx)
{
xx<-r
m<-j
}
}
for(j in 1:row)
{
r<-New_Distance_of_Categorical(data[j,],data[dist[1],])%*%da[j,1]
if(r>xx)
{
xx<-r
m<-j
}
}
New_Distance_of_Categorical<-function(Data1,Data2)
{
{
n<-nrow(Data1)
d<-ncol(Data1)
}
dataset<-vector()
Distance<-vector()
Distance=0
for(j in 1:d)
{
if (Data1[,j]!=Data2[,j])
Distance<-Distance+1
}
dataset<-Distance
dist<-matrix(c(dataset),ncol=1)
}
for(j in 1:row)
{
r<-New_Distance_of_Categorical(data[j,],data[dist[1],])%*%da[j,1]
if(r>xx)
{
xx<-r
m<-j
}
}
dist<-rbind(dist,m)
New_Distance_of_Categorical<-function(Data1,Data2)
{
{
n<-nrow(Data1)
d<-ncol(Data1)
}
dataset<-vector()
Distance<-vector()
Distance=0
for(j in 1:d)
{
if (Data1[1,j]!=Data2[1,j])
Distance<-Distance+1
}
dataset<-Distance
dist<-matrix(c(dataset),ncol=1)
}
for(j in 1:row)
{
r<-New_Distance_of_Categorical(data[j,],data[dist[1],])%*%da[j,1]
if(r>xx)
{
xx<-r
m<-j
}
}
dist<-rbind(dist,m)
j<-1
da<-frequency(data)
da
row<-nrow(data)
column<-ncol(data)
da<-vector()
daa<-vector()
DA<-vector()
dist<-vector()
for(i in 1:row)
{
sum=0
for(j in 1:column)
{
ss<-length(which(data[,j]==data[i,j]))/row
sum<-sum+ss
dist<-sum
}
daa<-cbind(dist,i)
DA<-rbind(DA,daa)
}
da<-DA
da
da<-frequency(data)
da
rr<-which(da==max(da[,1]))
rr<-66
dist<-rbind(dist,rr)
xx<-0
mmm<-vector()
for(j in 1:row)
{
r<-New_Distance_of_Categorical(data[j,],data[dist[1],])%*%da[j,1]
if(r>xx)
{
xx<-r
m<-j
}
}
dist<-rbind(dist,m)
row<-nrow(data)
column<-ncol(data)
da<-vector()
daa<-vector()
DA<-vector()
dist<-vector()
for(i in 1:row)
{
sum=0
for(j in 1:column)
{
ss<-length(which(data[,j]==data[i,j]))/row
sum<-sum+ss
dist<-sum
}
daa<-cbind(dist,i)
DA<-rbind(DA,daa)
}
da<-DA
da
for(j in 1:row)
{
r<-New_Distance_of_Categorical(data[j,],data[dist[1],])%*%da[j,1]
if(r>xx)
{
xx<-r
m<-j
}
}
dist<-rbind(dist,m)
dist
rr<-66
dist<-vector()
dist<-rbind(dist,rr)
xx<-0
mmm<-vector()
for(j in 1:row)
{
r<-New_Distance_of_Categorical(data[j,],data[dist[1],])%*%da[j,1]
if(r>xx)
{
xx<-r
m<-j
}
}
dist<-rbind(dist,m)
dist
for(i in 3:K)
{
mindist<-vector()
for(j in 1:row)
{
yy<-99999
for(n in 1:length(dist))
{
t<-Distance_of_Categorical(data[j,],data[dist[n],])%*%da[j,1]
if(t<yy)
{
yy<-t
}
}
mindist<-rbind(mindist,yy)
}
x<-which(mindist==max(mindist))
dist<-rbind(dist,x)
}
for(i in 3:K)
{
mindist<-vector()
for(j in 1:row)
{
yy<-99999
for(n in 1:length(dist))
{
t<-New_Distance_of_Categorical(data[j,],data[dist[n],])%*%da[j,1]
if(t<yy)
{
yy<-t
}
}
mindist<-rbind(mindist,yy)
}
x<-which(mindist==max(mindist))
dist<-rbind(dist,x)
}
DDist<-dist
DDist
centers<-data[DDist,]
centers
row.names(centers)<-c(1:K)
ni<-centers
NI
ni
frequency<-function(data)
{
row<-nrow(data)
column<-ncol(data)
da<-vector()
daa<-vector()
DA<-vector()
dist<-vector()
for(i in 1:row)
{
sum=0
for(j in 1:column)
{
ss<-length(which(data[,j]==data[i,j]))/row
sum<-sum+ss
dist<-sum
}
daa<-cbind(dist,i)
DA<-rbind(DA,daa)
}
return(DA)
}
da<-frequency(data)
da
Da<-frequency(data)
Da
row<-nrow(data)
column<-ncol(data)
da<-frequency(data)
rr<-which(da==max(da[,1]))
rr
dist<-vector()
dist<-rbind(dist,rr)
xx<-0
mmm<-vector()
for(j in 1:row)
{
r<-New_Distance_of_Categorical(data[j,],data[dist[1],])%*%da[j,1]
if(r>xx)
{
xx<-r
m<-j
}
}
dist<-rbind(dist,m)
dist
for(i in 3:K)
{
mindist<-vector()
for(j in 1:row)
{
yy<-99999
for(n in 1:length(dist))
{
t<-New_Distance_of_Categorical(data[j,],data[dist[n],])%*%da[j,1]
if(t<yy)
{
yy<-t
}
}
mindist<-rbind(mindist,yy)
}
x<-which(mindist==max(mindist))
dist<-rbind(dist,x)
}
DDist<-dist
DDist
DDist<-k_initial_center(data)
New_Distance_of_Categorical<-function(Data1,Data2)
{
{
n<-nrow(Data1)
d<-ncol(Data1)
}
dataset<-vector()
Distance<-vector()
Distance=0
for(j in 1:d)
{
if (Data1[1,j]!=Data2[1,j])
Distance<-Distance+1
}
dataset<-Distance
dist<-matrix(c(dataset),ncol=1)
}
Find_Mode<-function(Data)
{
row<-nrow(Data)
column<-ncol(Data)
CColumnValue<-vector()
New_Mode<-vector()
dataset1<-vector()
NNew_Mode<-vector()
for(i in 1:column)
{
CColumnValue<-matrix(c(unique(Data[,i])),ncol=1)
for(j in 1:length( CColumnValue))
{m<-length(which(Data[,i]==CColumnValue[j,]))
dataset1[j]<-m
}
q<-min(which((dataset1==max(dataset1)),arr.ind=T))
New_Mode[i]<-CColumnValue[q,]
}
NNew_Mode<-matrix(c(New_Mode),nrow=1)
}
Distance_of_Categorical<-function(Data1,Data2)
{
{
n<-nrow(Data1)
d<-ncol(Data1)
}
dataset<-vector()
Distance<-vector()
for(i in 1:n)
{
Distance=0
for(j in 1:d)
{
if (Data1[i,j]!=Data2[i,j])
Distance<-Distance+1
}
dataset[i]<-Distance
}
dist<-matrix(c(dataset),ncol=1)
}
frequency<-function(data)
{
row<-nrow(data)
column<-ncol(data)
da<-vector()
daa<-vector()
DA<-vector()
dist<-vector()
for(i in 1:row)
{
sum=0
for(j in 1:column)
{
ss<-length(which(data[,j]==data[i,j]))/row
sum<-sum+ss
dist<-sum
}
daa<-cbind(dist,i)
DA<-rbind(DA,daa)
}
return(DA)
}
data
row<-nrow(data)
row
column<-ncol(data)
column
da<-frequency(data)
da
rr<-which(da==max(da[,1]))
rr
dist<-vector()
dist<-rbind(dist,rr)
xx<-0
mmm<-vector()
for(j in 1:row)
{
r<-New_Distance_of_Categorical(data[j,],data[dist[1],])%*%da[j,1]
if(r>xx)
{
xx<-r
m<-j
}
}
dist<-rbind(dist,m)
dist
for(i in 3:K)
{
mindist<-vector()
for(j in 1:row)
{
yy<-99999
for(n in 1:length(dist))
{
t<-New_Distance_of_Categorical(data[j,],data[dist[n],])%*%da[j,1]
if(t<yy)
{
yy<-t
}
}
mindist<-rbind(mindist,yy)
}
x<-which(mindist==max(mindist))
dist<-rbind(dist,x)
}
DDist<-dist
DDist
row<-nrow(data)
column<-ncol(data)
da<-frequency(data)
rr<-which(da==max(da[,1]))
dist<-vector()
dist<-rbind(dist,rr)
xx<-0
mmm<-vector()
for(j in 1:row)
{
r<-New_Distance_of_Categorical(data[j,],data[dist[1],])%*%da[j,1]
if(r>xx)
{
xx<-r
m<-j
}
}
dist<-rbind(dist,m)
dist<-as.matrix(dist)
dist
for(i in 3:K)
{
mindist<-vector()
for(j in 1:row)
{
yy<-99999
for(n in 1:length(dist))
{
t<-New_Distance_of_Categorical(data[j,],data[dist[n],])%*%da[j,1]
if(t<yy)
{
yy<-t
}
}
mindist<-rbind(mindist,yy)
}
x<-which(mindist==max(mindist))
dist<-as.matrix(rbind(dist,x))
}
DDist<-as.matrix(dist)
DDist
data
k
K<-7
InitialCenters<-NULL
{
n<-nrow(data)
d<-ncol(data)
}
n
d
cid<-vector(length=n)
oldcia<-matrix(1,nrow=1,ncol=K)
nr<-matrix(0,nrow=1,ncol=K)
if(is.null(InitialCenters)){
DDist<-k_initial_center(data)
centers<-data[DDist,]
}else{
centers<-data[InitialCenters,]
}
row.names(centers)<-c(1:K)
ni<-centers
ni
DDist
centers<-data[DDist,]
centers
InitialCenters<-NULL
if(is.null(InitialCenters)){
DDist<-k_initial_center<-function(data,K)
centers<-data[DDist,]
}else{
centers<-data[InitialCenters,]
}
row.names(centers)<-c(1:K)
ni<-centers
ni
nid<-nrow(ni)
if(nid!=K)
print(error)
#Set up maximum number of iterations
iter<-1
iiter<-100
while(iter<=iiter)
{
{
ptm<-proc.time()
for(i in 1:n)
{
q<-matrix(c(rep(data[i, ],K)),nrow=K,ncol=d,byrow=T)
dist<-Distance_of_Categorical(q,ni)
ind<-which(dist==min(dist[,1]),arr.ind=T)[1]
cid[i]<-ind
}
nj<-ni
data1<-vector()
for(i in 1:K)
{
data1<-data[(cid==i),]
if(length(data1)!=0)
{
nr[,i]<-dim(data1)[1]
nj[i,]<-Find_Mode(data1)
}
}
if(all(nj==ni))  break
}
ni<-nj
iter<-iter+1
}
cat("iter=",iter,"\n")
cat("clustering result cid=","\n",cid,"\n")
cat("time","\n")
print(proc.time()-ptm)
}
